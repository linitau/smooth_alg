#include <iostream>
#include <vector>
#include "fem_smooth/smooth.hpp"

int main() {
    std::cout << "Hello, World!" << std::endl;
    std::vector<double> pts = {
            0.000000, 0.000000,
            0.450000, 0.000000,
            0.899277, 0.025490,
            1.346390, 0.076389,
            1.789901, 0.152533,
            2.228386, 0.253678,
            2.660439, 0.379499,
            3.084670, 0.529591,
            3.499719, 0.803473,
            3.904251, 0.900586,
            4.296968, 1.120298,
            4.676609, 1.361902,
            5.041954, 1.624624,
            5.391831, 1.907619,
            5.725116, 2.209978,
            6.040739, 2.430731,
            6.337685, 2.868847,
            6.615003, 3.223242,
            6.871800, 3.592776,
            7.107252, 3.976262,
            7.320603, 4.372471,
            7.511169, 4.780129,
            7.678336, 5.197926,
            7.821569, 5.624523,
            7.940408, 6.058547,
            8.034469, 6.498607,
            8.103453, 6.943288,
            8.147137, 7.391163,
            8.265380, 7.840793,
            8.158125, 8.290734,
            8.125394, 8.739542,
            8.067293, 9.185776,
            7.984008, 9.628001,
            7.875807, 10.064799,
            7.743037, 10.494767,
            7.586125, 10.916523,
            7.405574, 11.328714,
            7.201964, 11.730016,
            6.975949, 12.119140,
            6.728255, 12.494836,
            6.459677, 12.855898,
            6.171078, 13.201167,
            5.863385, 13.529534,
            5.537585, 13.839944,
            5.194725, 14.131401,
            4.835905, 14.402968,
            4.462279, 14.653773,
            4.075046, 14.883012,
            3.675449, 15.089948,
            3.264772, 15.273916,
            2.844333, 15.434326,
            2.415483, 15.270662,
            1.979599, 15.682488,
            1.538080, 15.769442,
            1.092345, 15.831247,
            0.643824, 15.867704,
            0.193958, 15.878696,
            -0.255808, 15.864188,
            -0.704030, 15.824225,
            -1.149269, 15.758937,
            -1.590094, 15.668533,
            -2.025091, 15.553304};
    Smooth smooth;
    for (int i = 0; i < pts.size(); i++) {
        if (i % 2 == 0) {
            smooth.opt_x_.push_back(pts[i]);
            smooth.bounds_.push_back(0.15);
        } else {
            smooth.opt_y_.push_back(pts[i]);
        }
        if (i > 0 && i % 2 != 0) {
            smooth.raw_point2d_.emplace_back(pts[i - 1], pts[i]);
        }
    }
    smooth.Setup_smooth();
    return 0;
}
